//= require rails-ujs
//= require jquery
//= require sibu/common
//= require ../quill/quill
//= require ../tabs/van11y-accessible-tab-panel-aria
//= require_self

var Inline = Quill.import('blots/inline');

class IconBlot extends Inline {
    static create(args) {
        let node = super.create();
        node.setAttribute('href', args[0]);
        node.setAttribute('target', '_blank');
        node.setAttribute('class', args[1]);
        return node;
    }

    static formats(node) {
        return node.getAttribute('href');
    }

    format(name, value) {
        if (name !== this.statics.blotName || !value) return super.format(name, value);
        this.domNode.setAttribute('href', value);
    }
}
IconBlot.blotName = 'icon';
IconBlot.tagName = 'a';

Quill.register(IconBlot);
Quill.register(Quill.import('attributors/style/align'), true);

var Link = Quill.import('formats/link');

class CustomLink extends Link {
    static create(value) {
        let node = super.create(value);
        value = this.sanitize(value);
        node.setAttribute('href', value);
        if(value.startsWith("/")) {
            node.removeAttribute('target');
        }
        return node;
    }
}

Quill.register(CustomLink);

function initQuillEditor(container) {
    var quillModules;
    var modulesCallback = "sibuEditorModules";
    if(typeof window[modulesCallback] === "function") {
        quillModules = window[modulesCallback]();
    } else {
        quillModules = {
            toolbar: [
                ['bold', 'italic', 'underline'], ['link'],
                [{ 'color': [] }, { 'background': [] }],
                [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                [{ 'align': [] }],
                ['facebook', 'twitter', 'instagram', 'pinterest'],
                ['clean']
            ]
        };
    }
    var quill = new Quill(container, {
        modules: quillModules,
        theme: 'snow'
    });

    function promptWithInit(promptText) {
        var range = quill.getSelection(true);
        if(range && range.length === 0) {
            quill.insertText(range.index, ' ', Quill.sources.USER);
            quill.setSelection(range.index, 1, Quill.sources.USER);
        }
        return prompt(promptText);
    }

    var fbButton = document.querySelector('.ql-facebook');
    if(fbButton) {
      fbButton.addEventListener('click', function() {
          var value = promptWithInit('Adresse de la page Facebook :');
          quill.format('icon', [value, 'sb-facebook']);
      });
    }
    var twButton = document.querySelector('.ql-twitter');
    if(twButton) {
      twButton.addEventListener('click', function() {
          var value = promptWithInit('Adresse du compte Twitter :');
          quill.format('icon', [value, 'sb-twitter']);
      });
    }
    var igButton = document.querySelector('.ql-instagram');
    if(igButton) {
      igButton.addEventListener('click', function() {
          var value = promptWithInit('Adresse du compte Instagram :');
          quill.format('icon', [value, 'sb-instagram']);
      });
    }
    var piButton = document.querySelector('.ql-pinterest');
    if(piButton) {
      piButton.addEventListener('click', function() {
          var value = promptWithInit('Adresse du compte Pinterest :');
          quill.format('icon', [value, 'sb-pinterest']);
      });
    }

    return quill;
}

function initCustomCenter() {
    var wrapper = $(".sibu_center > img"), centerPos = $(".sibu_center > #sibu_center_pos");
    displayCurrentCenter(wrapper[0], centerPos);
    $(".sibu_center > #sibu_center_desc").show();
    wrapper.click(function(e) {
        var rect = e.target.getBoundingClientRect();
        var x = e.clientX - rect.left;
        var y = e.clientY - rect.top;
        centerPos.css("top", y + "px");
        centerPos.css("left", x + "px");
        $("#element_class").val(`posx_${Math.floor((x / rect.width) * 10) * 10} posy_${Math.floor((y / rect.height) * 10) * 10}`);
    })
}

function displayCurrentCenter(img, centerPos) {
    var val = $("#element_class").val();
    var rect = img.getBoundingClientRect();
    if (val && val.indexOf('posx') !== -1 && val.indexOf('posy') !== -1) {
        var xpos = val.slice(val.indexOf("posx_") + 5, val.indexOf("posx_") + 7);
        var ypos = val.slice(val.indexOf("posy_") + 5, val.indexOf("posy_") + 7);
        centerPos.css("top", Math.round(+ypos * (rect.height / 100)) + "px");
        centerPos.css("left", Math.round(+xpos * (rect.width / 100)) + "px");
    } else {
        centerPos.css("top", (Math.round(rect.height / 2) - 15) + "px");
        centerPos.css("left", (Math.round(rect.width / 2) - 7) + "px");
    }
    centerPos.show();
}

function refreshAfterEdit(reload, sectionId) {
    var baseUrl = window.location.href.split('?')[0];
    if (reload) {
        if (sectionId) {
            window.location.href = baseUrl + '?edit_section=' + sectionId;
        } else {
            window.location.href = baseUrl;
        }
    } else {
        window.history.replaceState(null, null, window.location.pathname);
    }
}

function initSectionsPanel() {

}