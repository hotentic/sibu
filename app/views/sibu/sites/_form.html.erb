<%= form_for @site do |f| %>
  <div class="sibu_field">
    <%= f.label :name, 'Nom du site' %>
    <div>
      <%= f.text_field :name, placeholder: "Ex : Site de l'Hôtel du Lac" %>
      <small>Libellé utilisé dans l'outil d'administration (non utilisé dans le site)</small>
    </div>
  </div>
  <div class="sibu_field">
    <%= f.label :name, 'Nom de domaine' %>
    <div>
      <%= f.text_field :domain, placeholder: "Ex : www.monsite.com (utilisé lors de la mise en ligne du site)" %>
      <small>Renseignez le nom de domaine de votre site (utile uniquement lors de la publication)</small>
    </div>
  </div>
  <div class="sibu_field">
    <%= f.label :site_template_id, 'Modèle' %>
    <div>
      <%= f.collection_select(:site_template_id, Sibu::SiteTemplate.all, :id, :name, {prompt: 'Sélectionnez un modèle de site'}, disabled: @site.persisted?) %>
      <small>Choisissez le gabarit qui servira de modèle pour votre site (non modifiable après création)</small>
    </div>
  </div>
  <div class="sibu_field">
    <%= f.label :version, 'Version' %>
    <div>
      <%= f.select :version, site_versions %>
      <small>Langue du site</small>
    </div>
  </div>
  <div class="sibu_field">
    <%= f.label :analytics_id, "Statistiques d'audience" %>
    <div>
      <%= f.text_field :analytics_id, placeholder: "UA-XXXXXX" %>
      <small>Renseignez l'identifiant Google Analytics pour suivre les statistiques d'audience du site</small>
    </div>
  </div>
  <% if conf[:custom_styles] && @site.persisted? %>
  <div class="sibu_field sibu_colors">
    <%= f.label :primary_color, 'Couleur principale' %>
    <div>
      <% primary_colors.each do |c| %>
        <span class="sibu_color <%= 'selected' if f.object.primary_color == c %>" data-color="<%= c %>" style="background-color: <%= c %>;"></span>
      <% end %>
      <small>Couleur principale appliquée au modèle choisi</small>
    </div>
    <%= f.hidden_field :primary_color %>
  </div>
  <div class="sibu_field sibu_colors">
    <%= f.label :secondary_color, 'Couleur secondaire' %>
    <div>
      <% secondary_colors.each do |c| %>
        <span class="sibu_color <%= 'selected' if f.object.secondary_color == c %>" data-color="<%= c %>" style="background-color: <%= c %>;"></span>
      <% end %>
      <small>Couleur secondaire appliquée au modèle choisi</small>
    </div>
    <%= f.hidden_field :secondary_color %>
  </div>
  <div class="sibu_field sibu_fonts">
    <%= f.label :name, 'Police de caractères (titres)' %>
    <div>
      <%= f.select :primary_font, primary_fonts %>
      <small>Police de caractère utilisée pour les titres du modèle choisi</small>
    </div>
  </div>
  <div class="sibu_field sibu_fonts">
    <%= f.label :name, 'Police de caractères (corps)' %>
    <div>
      <%= f.select :secondary_font, secondary_fonts %>
      <small>Police de caractère utilisée pour les corps de texte du modèle choisi</small>
    </div>
  </div>
  <% end %>
  <%= f.hidden_field :user_id %>
  <div class="sibu_actions">
    <%= f.submit 'Valider', data: {disable_with: 'Enregistrement en cours...'} %>
    <%= link_to 'Annuler', :back %>
  </div>
<% end %>

<% content_for :scripts do %>
  <script>
      $(".sibu_colors").each(function () {
          var colors = $(this).find(".sibu_color");
          var input = $(this).find("input");
          colors.click(function () {
              selectColor($(this), colors, input);
          });
      });

      function selectColor(color, colors, input) {
          if(!color.hasClass('selected')) {
              colors.removeClass("selected");
              color.addClass('selected');
              input.val(color.data("color"));
          }
      }

      function resetValues() {
          $(".sibu_colors").each(function () {
              var colors = $(this).find(".sibu_color");
              var defaultColor = colors.first();
              var input = $(this).find("input");
              selectColor(defaultColor, colors, input);
          });
          $(".sibu_fonts").each(function() {
              var fonts = $(this).find("select");
              var defaultValue = fonts.find("option").first().attr("value");
              fonts.val(defaultValue).change();
          });
      }
  </script>
<% end %>